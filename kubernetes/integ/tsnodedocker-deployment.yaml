apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.integ.yml
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: tsnodedocker
  name: tsnodedocker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: tsnodedocker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.integ.yml
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.network/daapi: "true"
        io.kompose.service: tsnodedocker
    spec:
      containers:
      - args:
        - bash
        - -c
        - /home/node/app/bin/run-web.sh
        env:
        - name: APP_ENV
          value: test
        image: tsnodedocker
        imagePullPolicy: ""
        name: tsnodedocker
        ports:
        - containerPort: 4000
        resources: {}
        volumeMounts:
        - mountPath: /home/node/app/src
          name: tsnodedocker-claim0
        - mountPath: /home/node/app/nodemon.json
          name: tsnodedocker-claim1
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: tsnodedocker-claim0
        persistentVolumeClaim:
          claimName: tsnodedocker-claim0
      - name: tsnodedocker-claim1
        persistentVolumeClaim:
          claimName: tsnodedocker-claim1
status: {}
